"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8986],{8792:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"issues/at-apply","title":"css \u4e2d\u4f7f\u7528 @apply \u8b66\u544a\u95ee\u9898","description":"\u89e3\u51b3\u65b9\u6848","source":"@site/docs/issues/at-apply.md","sourceDirName":"issues","slug":"/issues/at-apply","permalink":"/weapp-tailwindcss/docs/issues/at-apply","draft":false,"unlisted":false,"editUrl":"https://github.com/sonofmagic/weapp-tailwindcss/tree/main/website/docs/issues/at-apply.md","tags":[],"version":"current","frontMatter":{},"sidebar":"issuesSidebar","previous":{"title":"\u751f\u6210\u6837\u5f0f\u53ea\u4f5c\u7528\u4e8eview\u548ctext\u6807\u7b7e","permalink":"/weapp-tailwindcss/docs/issues/more-tags"},"next":{"title":"H5 \u7aef\u539f\u751f toast \u6837\u5f0f\u504f\u79fb\u95ee\u9898","permalink":"/weapp-tailwindcss/docs/issues/toast-svg-bug"}}');var t=s(7557),c=s(5809);const a={},o="css \u4e2d\u4f7f\u7528 @apply \u8b66\u544a\u95ee\u9898",r={},d=[{value:"\u89e3\u51b3\u65b9\u6848",id:"\u89e3\u51b3\u65b9\u6848",level:2},{value:"\u53c2\u8003\u6587\u6863",id:"\u53c2\u8003\u6587\u6863",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"css-\u4e2d\u4f7f\u7528-apply-\u8b66\u544a\u95ee\u9898",children:"css \u4e2d\u4f7f\u7528 @apply \u8b66\u544a\u95ee\u9898"})}),"\n",(0,t.jsx)(e.h2,{id:"\u89e3\u51b3\u65b9\u6848",children:"\u89e3\u51b3\u65b9\u6848"}),"\n",(0,t.jsxs)(e.p,{children:["\u6211\u4eec\u4ee5 ",(0,t.jsx)(e.code,{children:"vscode"})," \u4e3a\u4f8b"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\u521b\u5efa ",(0,t.jsx)(e.code,{children:".vscode"})," \u76ee\u5f55"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u7136\u540e\u5728\u76ee\u5f55\u4e0b\u521b\u5efa ",(0,t.jsx)(e.code,{children:"settings.json"})," \u548c ",(0,t.jsx)(e.code,{children:"tailwind.json"})]}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsxs)(e.li,{children:["\u4fee\u6539 ",(0,t.jsx)(e.code,{children:"settings.json"})," \u6dfb\u52a0"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsn",children:'{\n  "css.customData": [".vscode/tailwind.json"]\n}\n'})}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsxs)(e.li,{children:["\u4fee\u6539 ",(0,t.jsx)(e.code,{children:"tailwind.json"})]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "version": 1.1,\n  "atDirectives": [\n    {\n      "name": "@tailwind",\n      "description": "Use the `@tailwind` directive to insert Tailwind\'s `base`, `components`, `utilities` and `screens` styles into your CSS.",\n      "references": [\n        {\n          "name": "Tailwind Documentation",\n          "url": "https://tailwindcss.com/docs/functions-and-directives#tailwind"\n        }\n      ]\n    },\n    {\n      "name": "@apply",\n      "description": "Use the `@apply` directive to inline any existing utility classes into your own custom CSS. This is useful when you find a common utility pattern in your HTML that you\u2019d like to extract to a new component.",\n      "references": [\n        {\n          "name": "Tailwind Documentation",\n          "url": "https://tailwindcss.com/docs/functions-and-directives#apply"\n        }\n      ]\n    },\n    {\n      "name": "@responsive",\n      "description": "You can generate responsive variants of your own classes by wrapping their definitions in the `@responsive` directive:\\n```css\\n@responsive {\\n  .alert {\\n    background-color: #E53E3E;\\n  }\\n}\\n```\\n",\n      "references": [\n        {\n          "name": "Tailwind Documentation",\n          "url": "https://tailwindcss.com/docs/functions-and-directives#responsive"\n        }\n      ]\n    },\n    {\n      "name": "@screen",\n      "description": "The `@screen` directive allows you to create media queries that reference your breakpoints by **name** instead of duplicating their values in your own CSS:\\n```css\\n@screen sm {\\n  /* ... */\\n}\\n```\\n\u2026gets transformed into this:\\n```css\\n@media (min-width: 640px) {\\n  /* ... */\\n}\\n```\\n",\n      "references": [\n        {\n          "name": "Tailwind Documentation",\n          "url": "https://tailwindcss.com/docs/functions-and-directives#screen"\n        }\n      ]\n    },\n    {\n      "name": "@variants",\n      "description": "Generate `hover`, `focus`, `active` and other **variants** of your own utilities by wrapping their definitions in the `@variants` directive:\\n```css\\n@variants hover, focus {\\n   .btn-brand {\\n    background-color: #3182CE;\\n  }\\n}\\n```\\n",\n      "references": [\n        {\n          "name": "Tailwind Documentation",\n          "url": "https://tailwindcss.com/docs/functions-and-directives#variants"\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u8fd9\u6837 ",(0,t.jsx)(e.code,{children:"@apply"})," \u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\u3002"]}),"\n",(0,t.jsx)(e.h2,{id:"\u53c2\u8003\u6587\u6863",children:"\u53c2\u8003\u6587\u6863"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://github.com/tailwindlabs/tailwindcss/discussions/5258",children:"https://github.com/tailwindlabs/tailwindcss/discussions/5258"})})]})}function p(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},5809:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>o});var i=s(8225);const t={},c=i.createContext(t);function a(n){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);